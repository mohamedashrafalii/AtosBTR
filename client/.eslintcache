[{"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\index.js":"1","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\reportWebVitals.js":"2","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\App.js":"3","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\CreateStore\\createStore.jsx":"4","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\CreateStore\\SubscModal.js":"5","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\CreateStore\\Loading.js":"6","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Receipt\\Receipt.jsx":"7","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Receipt\\ViewTable.jsx":"8","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Error\\Error404.jsx":"9","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Receipt\\TotalTable.jsx":"10"},{"size":547,"mtime":1611695932292,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1642,"mtime":1612098235603,"results":"14","hashOfConfig":"12"},{"size":10451,"mtime":1612199211113,"results":"15","hashOfConfig":"12"},{"size":4356,"mtime":1611834150737,"results":"16","hashOfConfig":"12"},{"size":536,"mtime":1611669627915,"results":"17","hashOfConfig":"12"},{"size":5531,"mtime":1612098791537,"results":"18","hashOfConfig":"12"},{"size":5425,"mtime":1612050410520,"results":"19","hashOfConfig":"12"},{"size":2269,"mtime":1612042201564,"results":"20","hashOfConfig":"12"},{"size":1870,"mtime":1612095733784,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vocz5l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\index.js",[],["48","49"],"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\reportWebVitals.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\App.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\CreateStore\\createStore.jsx",["50"],"import React, { Component, useState } from \"react\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport KeyModal from './SubscModal.js'\r\nimport axios from 'axios';\r\nimport staticVariables from '../Receipt/Statics.json'\r\n\r\n\r\nexport default class createStore extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      storeName: \"\",\r\n      storeAddress: \"\",\r\n      storeCategory: \"\",\r\n      storeNumber:\"\",\r\n      categoryInputHidden: true,\r\n      modalShow: false,\r\n      nameAlert:false,\r\n      addressAlert:false,\r\n      categoryAlert:false,\r\n      numberAlert:false,\r\n      loading:false,\r\n      subscriptionKey:\"\",\r\n      token:\"\"\r\n    };\r\n    this.handleStoreNameChange = this.handleStoreNameChange.bind(this);\r\n    this.handleStoreAddressChange = this.handleStoreAddressChange.bind(this);\r\n    this.handleStoreCategoryChange = this.handleStoreCategoryChange.bind(this);\r\n    this.handleStoreNumberChange = this.handleStoreNumberChange.bind(this);\r\n  }\r\n\r\n  handleStoreNameChange(event) {\r\n    this.setState({ storeName: event.target.value });\r\n  }\r\n\r\n  handleStoreAddressChange(event) {\r\n    this.setState({ storeAddress: event.target.value });\r\n  }\r\n  handleStoreCategoryChange(event) {\r\n    this.setState({ storeCategory: event.target.value });\r\n  }\r\n  handleStoreNumberChange(event) {\r\n    this.setState({ storeNumber: event.target.value });\r\n  }\r\n  // submitStore = (e) => {\r\n    async submitStore  (e)  {\r\n    // alert(this.state.storeCategory)\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.setState({ nameAlert: false,addressAlert: false,categoryAlert:false,numberAlert:false });\r\n    if(this.state.storeName===''){\r\n        this.setState({ nameAlert: true });\r\n    }\r\n    if(this.state.storeAddress===''){\r\n        this.setState({ addressAlert: true });\r\n    }\r\n    if(this.state.storeCategory===''){\r\n        this.setState({ categoryAlert: true });\r\n    }\r\n    if(this.state.storeNumber.length<8){\r\n      this.setState({ numberAlert: true });\r\n  }\r\n    if (this.state.storeName!=='' &&this.state.storeAddress!=='' &&this.state.storeCategory!=='' && this.state.storeNumber.length>=8) {\r\n      this.setState({loading:true, modalShow: true });\r\n      await axios.post(`${staticVariables.backendURL}/api/storesInfo/create`,\r\n      {\r\n        phoneNumbers:[this.state.storeNumber],\r\n        address:this.state.storeAddress,\r\n        storeName:this.state.storeName,\r\n        category:this.state.storeCategory\r\n      })\r\n        .then(response => {\r\n          this.setState({subscriptionKey:response.data.id,loading:false ,token:response.data.token});\r\n        })\r\n        .catch(error => {\r\n          alert(\"OOPS!! Something went wrong. Try again\")\r\n          this.setState({modalShow:false,loading:false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n        \r\n\r\n      <div style={bgImage}>\r\n            \r\n      <div class=\"signin-background\">\r\n        {/* <HomeNavbar /> */}\r\n        {/* <SigninNav /> */}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n              <div class=\"card card-signin my-5\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title text-center\">Subscription</h5>\r\n                  <form class=\"form-signin\">\r\n                    <div class=\"form-label-group\">\r\n                      <label for=\"inputStoreName\">Store Name</label>\r\n                      <input\r\n                        id=\"inputStoreName\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter Store Name\"\r\n                        onChange={this.handleStoreNameChange}\r\n                        value={this.state.storeName}\r\n                        required\r\n                        autofocus\r\n                      />\r\n                      <Alert  variant='danger' show={this.state.nameAlert}>\r\n                        Store Name can't be empty!\r\n                    </Alert>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div class=\"form-label-group\" >\r\n                      <label for=\"inputStoreAddress\">Store Address</label>\r\n                      <input\r\n                        id=\"inputStoreAddress\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter Store Address\"\r\n                        onChange={this.handleStoreAddressChange}\r\n                        value={this.state.storeAddress}\r\n                        required\r\n                        autofocus\r\n                      />\r\n                      <Alert  variant='danger' show={this.state.addressAlert}>\r\n                        Store address can't be empty!\r\n                    </Alert>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div class=\"form-label-group\">\r\n                      <label for=\"inputStoreNumber\">Store phone Number</label>\r\n                      \r\n                      <PhoneInput\r\n                        country={'eg'}\r\n                        value={this.state.storeNumber}\r\n                        enableSearch = 'true'\r\n                        onChange={phone => this.setState({ storeNumber:phone })}\r\n                        />\r\n                        <Alert  variant='danger' show={this.state.numberAlert}>\r\n                        Invalid phone Number!\r\n                    </Alert>\r\n                      {/* <Alert  variant='danger' show={this.state.addressAlert}>\r\n                        Store Number can't be empty!\r\n                    </Alert> */}\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div class=\"form-label-group\">\r\n                      <label for=\"inputStoreCategory\">Store Category</label>\r\n                      <div>\r\n                        <ToggleButtonGroup\r\n                          type=\"radio\"\r\n                          name=\"options\"\r\n                        //   defaultValue={this.state.storeCategory}\r\n                          onChange={(value) =>\r\n                            this.setState({ storeCategory: value })\r\n                          }\r\n                        >\r\n                          <ToggleButton\r\n                            disabled={!this.state.categoryInputHidden}\r\n                            variant=\"outline-info\"\r\n                            value={\"food\"}\r\n                          >\r\n                            Food\r\n                          </ToggleButton>\r\n                          <ToggleButton\r\n                            disabled={!this.state.categoryInputHidden}\r\n                            variant=\"outline-info\"\r\n                            value={\"grocery\"}\r\n                          >\r\n                            Grocery\r\n                          </ToggleButton>\r\n                          <ToggleButton\r\n                            disabled={!this.state.categoryInputHidden}\r\n                            variant=\"outline-info\"\r\n                            value={\"medical\"}\r\n                          >\r\n                            Medical\r\n                          </ToggleButton>\r\n                          <ToggleButton\r\n                            disabled={!this.state.categoryInputHidden}\r\n                            variant=\"outline-info\"\r\n                            value={\"clothes\"}\r\n                          >\r\n                            Clothes\r\n                          </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                      </div>\r\n                      <div class=\"custom-control custom-checkbox mb-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          class=\"custom-control-input\"\r\n                          id=\"customCheck1\"\r\n                          onChange={() =>\r\n                            this.setState({\r\n                              categoryInputHidden: !this.state\r\n                                .categoryInputHidden,\r\n                              storeCategory: \"\",\r\n                            })\r\n                          }\r\n                        />\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">\r\n                          Other category\r\n                        </label>\r\n                      </div>\r\n                      <input\r\n                        id=\"inputStoreCategory\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter Store Category\"\r\n                        onChange={this.handleStoreCategoryChange}\r\n                        value={this.state.storeCategory}\r\n                        hidden={this.state.categoryInputHidden}\r\n                        required={!this.state.categoryInputHidden}\r\n                        autofocus\r\n                      />\r\n                      <Alert  variant='danger' show={this.state.categoryAlert}>\r\n                        Store category can't be empty!\r\n                    </Alert>\r\n                    </div>\r\n                    <br />\r\n                    <button\r\n                      class=\"btn btn-lg btn-info btn-block text-uppercase\"\r\n                      type=\"submit\"\r\n                      onSubmit={(e)=>{e.preventDefault();e.stopPropagation();}}\r\n                      onClick={(e)=>this.submitStore(e)}\r\n                    >\r\n                      Subscribe\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <KeyModal show={this.state.modalShow} storeName={this.state.storeName} loading={this.state.loading} sKey={this.state.subscriptionKey} token={this.state.token}/>\r\n          </div>\r\n        </div>\r\n       \r\n        <br />\r\n        <br />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst bgImage = {\r\n    // \"background-color\":'#35605a',\r\n    \"backgroundImage\":`url(/beatthereceipt.png)`,\r\n    // \"background-image\": {img},\r\n    \"background-repeat\": 'no-repeat',\r\n    \"background-attachment\": 'fixed',\r\n    \"background-size\": 'cover'\r\n    \r\n  };\r\n\r\n\r\n  \r\n  \r\n","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\CreateStore\\SubscModal.js",["51"],"import React ,{ useState }  from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport LoadingIcon from './Loading.js'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst KeyModal = (props) => {\r\n  // const [show, setShow] = useState(props.show);\r\n  var show = props.show;\r\n  const handleClose = () => (show = false);\r\n  const handleShow = () => (show = true);\r\n\r\n  // const handleShowAlert = () => (showAlert = true);\r\n  const [alertt, setAlert] = useState(false);\r\n  const [alertt2, setAlert2] = useState(false);\r\n  if(props.loading){\r\n    return(\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n        <Modal.Title>{props.storeName} Subscription</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Please save your subscription key as you will need it later. All our\r\n          API's are dependant on this key\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n          {/* <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button> */}\r\n          {/* <div class=\"form-label-group\"> */}\r\n          \r\n          <Modal.Body>\r\n          <LoadingIcon type='spin' color='#5bc0de'/>\r\n        </Modal.Body>\r\n          \r\n         \r\n          <br />\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n  else{\r\n\r\n  \r\n  return (\r\n    <>\r\n      {/* <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch static backdrop modal\r\n        </Button> */}\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n        <Modal.Title>{props.storeName} Subscription</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Please save your subscription key and token as you will need it later while using our\r\n          API's.\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n          {/* <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button> */}\r\n          {/* <div class=\"form-label-group\"> */}\r\n          \r\n          <Modal.Body>\r\n          Subscription Key:\r\n        </Modal.Body>\r\n            \r\n          <input\r\n            id=\"subs\"\r\n            class=\"form-control\"\r\n            placeholder=\"subscription\"\r\n            value={props.sKey}\r\n            disabled=\"true\"\r\n            autofocus\r\n          />\r\n            <Alert  variant='success' show={alertt2}>\r\n                        Copied to clipboard\r\n                    </Alert>\r\n           <CopyToClipboard text={props.sKey}\r\n          onCopy={() => {setAlert2(true); setAlert(false)}}>\r\n          <button\r\n                      class=\"btn btn-lg btn-info  text-uppercase\"\r\n                      // onClick={(e)=>this.submitStore(e)}\r\n                    >COPY</button>\r\n        </CopyToClipboard>\r\n        \r\n            {/* <input\r\n            id=\"token\"\r\n            class=\"form-control\"\r\n            placeholder=\"token\"\r\n            value={props.token}\r\n            disabled=\"true\"\r\n            autofocus\r\n          /> */}\r\n          {/* cols=\"30\" */}\r\n          </Modal.Footer>\r\n          <Modal.Footer>\r\n          <Modal.Body>\r\n          Subscription Token:\r\n        </Modal.Body>\r\n           <textarea name=\"message\" rows=\"3\" class=\"form-control\" value={props.token} disabled=\"true\" autofocus/>\r\n          <Alert  variant='success' show={alertt}>\r\n                        Copied to clipboard\r\n                    </Alert>\r\n           <CopyToClipboard text={props.token}\r\n          onCopy={() => {setAlert2(false); setAlert(true)}}>\r\n          <button\r\n                      class=\"btn btn-lg btn-info  text-uppercase\"\r\n                      // onClick={(e)=>this.submitStore(e)}\r\n                    >COPY</button>\r\n        </CopyToClipboard>\r\n        \r\n          {/* <button\r\n                      class=\"btn btn-lg btn-info btn-block text-uppercase\"\r\n                      type=\"submit\"\r\n                    >\r\n                      COPY\r\n                    </button> */}\r\n          <br />\r\n          {/* </div> */}\r\n          {/* <Button variant=\"primary\">Understood</Button> */}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n                  }\r\n};\r\n\r\nexport default KeyModal;",["52","53"],"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\CreateStore\\Loading.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Receipt\\Receipt.jsx",["54"],"import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport axios from 'axios'\r\nimport Items from './ViewTable.jsx'\r\nimport TotalTable from './TotalTable.jsx'\r\nimport Error404 from '../Error/Error404.jsx'\r\nimport LoadingIcon from '../CreateStore/Loading.js'\r\nimport staticVariables from './Statics.json'\r\nimport Barcode from 'react-barcode';\r\nexport default class receipt extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      error: false,\r\n      storeName: '',\r\n      storeAddress: '',\r\n      storeNumber: '',\r\n      barcode: 0,\r\n      receipt: {\r\n        subTotal: 0,\r\n        vatPercentage: 0,\r\n        items: [\r\n          {\r\n            name: '',\r\n            description: '',\r\n            quantity: 0,\r\n            price: 0,\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  }\r\n\r\n  calculateSubTotal() {\r\n    let subTotal = 0\r\n    var i\r\n    for (i = 0; i < this.state.receipt.items.length; i++) {\r\n      subTotal +=  (this.state.receipt.items[i].price*this.state.receipt.items[i].quantity)\r\n    }\r\n    this.state.receipt.subTotal=subTotal\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\r\n        `${staticVariables.backendURL}/api/receipts/read/${this.props.match.params.id}`\r\n      )\r\n      .then((response) => {\r\n        if (response.data.data) {\r\n          this.setState({ receipt: response.data.data.receipt ,barcode:response.data.data.barcode})\r\n          this.calculateSubTotal()\r\n          axios\r\n            .get(\r\n              `${staticVariables.backendURL}/api/storesInfo/${response.data.data.storeId}`\r\n            )\r\n            .then((response) => {\r\n              if (response.data.data) {\r\n                this.setState({\r\n                  storeName: response.data.data.storeName,\r\n                  storeAddress: response.data.data.address,\r\n                  storeNumber: response.data.data.phoneNumbers[0],\r\n                  loading: false,\r\n                })\r\n              } else {\r\n                this.setState({ error: true, loading: false })\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.setState({ error: true, loading: false })\r\n            })\r\n        } else {\r\n          this.setState({ error: true, loading: false })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: true, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={bgImage}>\r\n          <div class=\"signin-background\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                  <div class=\"card card-signin my-5\">\r\n                    <div class=\"card-body\">\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      )\r\n    } else if (this.state.error) {\r\n      return <Error404 />\r\n    } else {\r\n      return (\r\n        <div style={bgImage}>\r\n          <div class=\"signin-background\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                  <div class=\"card card-signin my-5\">\r\n                    <div class=\"card-body\">\r\n                      <Card style={bgColor}>\r\n                        <Card.Body>\r\n                          <h1 class=\"card-title text-center\">\r\n                            {this.state.storeName}\r\n                          </h1>\r\n                          <h3 class=\"card-title text-center\">\r\n                            {this.state.storeAddress}\r\n                          </h3>\r\n                          <h5 class=\"card-title text-center\">\r\n                            +{this.state.storeNumber}\r\n                          </h5>\r\n                        </Card.Body>\r\n                      </Card>\r\n                      <form class=\"form-signin\">\r\n                        <div class=\"form-label-group\">\r\n                          <Items items={this.state.receipt.items} />\r\n                          <br />\r\n                          <Card>\r\n                            <TotalTable\r\n                              subTotal={this.state.receipt.subTotal}\r\n                              vatPercentage={this.state.receipt.vatPercentage}\r\n                            />\r\n                          </Card>\r\n                          {this.state.barcode&&<Barcode width={2} value={this.state.barcode} />}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst bgImage = {\r\n  // \"background-color\":'#35605a',\r\n  backgroundImage: `url(/beatthereceipt.png)`,\r\n  // \"background-image\": {img},\r\n  'background-repeat': 'no-repeat',\r\n  'background-attachment': 'fixed',\r\n  'background-size': 'cover',\r\n}\r\n\r\nconst bgColor = {\r\n  'background-color': '#479521',\r\n  color: 'white',\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Receipt\\ViewTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Error\\Error404.jsx",["55","56","57","58","59","60"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/ErrorOutline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(/beatthereceipt.png)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Error() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            ERROR\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h1\">\r\n            404\r\n          </Typography>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Page Not Found\r\n          </Typography>\r\n          \r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","D:\\Hackathon\\Beat The Receipt\\Code\\AtosBTR\\client\\src\\components\\Receipt\\TotalTable.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":28,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"69","line":11,"column":9,"nodeType":"67","messageId":"68","endLine":11,"endColumn":19},{"ruleId":"61","replacedBy":"70"},{"ruleId":"63","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":41,"column":5,"nodeType":"74","endLine":41,"endColumn":23},{"ruleId":"65","severity":1,"message":"75","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"76","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":17},{"ruleId":"65","severity":1,"message":"77","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":24},{"ruleId":"65","severity":1,"message":"78","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":16},{"ruleId":"65","severity":1,"message":"79","line":8,"column":8,"nodeType":"67","messageId":"68","endLine":8,"endColumn":12},{"ruleId":"65","severity":1,"message":"80","line":10,"column":8,"nodeType":"67","messageId":"68","endLine":10,"endColumn":11},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'handleShow' is assigned a value but never used.",["81"],["82"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Button' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation"]